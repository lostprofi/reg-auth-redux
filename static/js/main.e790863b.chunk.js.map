{"version":3,"sources":["reducers/userReducer.jsx","store/store.jsx","components/Input/Input.jsx","components/RegForm/RegForm.jsx","actions/actions.jsx","containers/Reg/Reg.jsx","components/AuthForm/AuthForm.jsx","containers/Auth/Auth.jsx","components/HomePage/HomePage.jsx","components/Profile/Profile.jsx","containers/App/App.jsx","serviceWorker.js","index.jsx"],"names":["initialState","users","userAuthFlag","isRegFormValid","formControls","regFormControls","email","value","type","label","errorMessage","valid","isValid","touched","validation","required","unique","name","minLength","authFormControls","exist","initFormControls","userReducer","state","action","usersCopy","unshift","payload","length","pop","authMail","store","createStore","Input","props","prop","inputType","htmlFor","Math","random","isInvalid","shouldValidate","addClass","className","id","onChange","RegForm","regInputsFormCtrls","onSubmit","Object","keys","map","controlName","control","key","event","disabled","authMailVal","authUser","bool","authFormControl","obj","connect","initRegFormControls","dispatch","addingUser","user","addUser","regFormControl","changeRegFormValid","history","useHistory","validateControl","trim","test","String","toLowerCase","forEach","element","userEmail","preventDefault","inputsList","target","querySelectorAll","inputsArr","Array","from","userData","userName","push","inputValue","isFormValid","AuthForm","authMailFormCtrl","authMailToStore","mail","userAuth","userAuthFlagJSON","JSON","stringify","localStorage","setItem","console","log","usersArr","el","storeJSON","HomePage","parse","getItem","Profile","authUserData","authUserFlag","initAuthFormControls","userOut","to","onClick","removeItem","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e790863b.chunk.js","sourcesContent":["const initialState = {\n  users: [],\n  userAuthFlag: false,\n  isRegFormValid: false,\n  formControls: {\n    regFormControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Enter your mail',\n        errorMessage: 'Enter correct email',\n        valid: {\n          isValid: false,\n          errorMessage: '',\n        },\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n          unique: true,\n        },\n      },\n\n      name: {\n        value: '',\n        type: 'text',\n        label: 'Name',\n        errorMessage: 'Enter correct username',\n        valid: {\n          isValid: false,\n          errorMessage: '',\n        },\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 3,\n        },\n      },\n    },\n    authFormControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Enter your mail',\n        errorMessage: 'Enter correct email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n          exist: true,\n        },\n      },\n    },\n  },\n  initFormControls: {\n    regFormControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Please enter your mail',\n        errorMessage: 'Enter correct email',\n        valid: {\n          isValid: false,\n          errorMessage: '',\n        },\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n          unique: true,\n        },\n      },\n\n      name: {\n        value: '',\n        type: 'text',\n        label: 'Name',\n        errorMessage: 'Enter correct username',\n        valid: {\n          isValid: false,\n          errorMessage: '',\n        },\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 3,\n        },\n      },\n    },\n    authFormControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Please enter your mail',\n        errorMessage: 'Enter correct email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n          exist: true,\n        },\n      },\n    },\n  },\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_USER': {\n      const usersCopy = state.users;\n\n      usersCopy.unshift(action.payload);\n\n      if (usersCopy.length > 10) {\n        usersCopy.pop();\n      }\n\n      return { ...state, users: usersCopy };\n    }\n\n    case 'AUTH_MAIL': {\n      return { ...state, authMail: action.payload };\n    }\n\n    case 'AUTH_USER': {\n      return { ...state, userAuthFlag: action.payload };\n    }\n\n    case 'AUTH_FORM-CONTROL': {\n      const formControls = { ...state.formControls };\n      formControls.authFormControls.email = action.payload;\n\n      return { ...state, formControls };\n    }\n\n    case 'REG_FORM-CONTROL': {\n      const formControls = { ...state.formControls };\n      formControls.regFormControls = action.payload;\n\n      return { ...state, formControls };\n    }\n\n    case 'IS_REG-FORM_VALID': {\n      return { ...state, isRegFormValid: action.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore } from 'redux';\nimport userReducer from '../reducers/userReducer';\n\nconst store = createStore(userReducer);\n\nexport default store;\n","import React from 'react';\nimport './_input.scss';\n\nconst Input = (props) => {\n  const prop = props;\n  const inputType = prop.type || 'text';\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  const isInvalid = ({ valid, touched, shouldValidate }) => {\n    return !valid && shouldValidate && touched;\n  };\n\n  let addClass = '';\n\n  if (isInvalid(prop)) {\n    addClass = 'form-group_invalid';\n  }\n\n  return (\n    <div className={`form-group ${addClass}`}>\n      <label htmlFor={htmlFor}>\n        {prop.label}\n        <input\n          type={prop.type}\n          className=\"form-control\"\n          id={htmlFor}\n          name={prop.name}\n          onChange={prop.onChange}\n          value={prop.value}\n        />\n      </label>\n      {isInvalid(prop) && <span className=\"form-group__span\">{prop.errorMessage}</span>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './_RegForm.scss';\nimport Input from '../Input/Input';\n\nconst RegForm = (props) => {\n  const prop = props;\n  const { regInputsFormCtrls } = prop;\n\n  const renderInputs = () => {\n    const inputsArr = Object.keys(regInputsFormCtrls).map((controlName) => {\n      const control = regInputsFormCtrls[controlName];\n      const change = (event) => {\n        return prop.onChange(event, controlName);\n      };\n      return (\n        <Input\n          key={controlName}\n          label={control.label}\n          type={control.type}\n          touched={control.touched}\n          valid={control.valid.isValid}\n          value={control.value}\n          errorMessage={control.valid.errorMessage}\n          shouldValidate={!!control.validation}\n          onChange={change}\n        />\n      );\n    });\n    return inputsArr;\n  };\n\n  return (\n    <form onSubmit={prop.onSubmit}>\n\n      {renderInputs()}\n\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={!prop.isRegFormValid}>\n        Sign up\n      </button>\n    </form>\n  );\n};\n\nexport default RegForm;\n","export const addUser = (user) => ({\n  type: 'ADD_USER',\n  payload: user,\n});\n\nexport const authMailVal = (authMail) => ({\n  type: 'AUTH_MAIL',\n  payload: authMail,\n});\n\nexport const authUser = (bool) => ({\n  type: 'AUTH_USER',\n  payload: bool,\n});\n\nexport const authFormControl = (obj) => ({\n  type: 'AUTH_FORM-CONTROL',\n  payload: obj,\n});\n\nexport const regFormControl = (obj) => ({\n  type: 'REG_FORM-CONTROL',\n  payload: obj,\n});\n\nexport const isRegFormValid = (bool) => ({\n  type: 'IS_REG-FORM_VALID',\n  payload: bool,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport RegForm from '../../components/RegForm/RegForm';\nimport { addUser, regFormControl, isRegFormValid } from '../../actions/actions';\n\nconst Reg = (props) => {\n  const prop = props;\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const inputsList = event.target.querySelectorAll('input');\n    const inputsArr = Array.from(inputsList);\n\n    const userEmail = inputsArr[0].value;\n    const userName = inputsArr[1].value;\n    const userData = {\n      userEmail,\n      userName,\n    };\n\n    prop.addingUser(userData);\n    prop.regFormControl(prop.initRegFormControls);\n    prop.changeRegFormValid(false);\n    history.push('/auth');\n  };\n\n  function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const validateControl = (value, validation) => {\n    let isValid = true;\n    let errorMessage = '';\n\n    if (!validation) {\n      return true;\n    }\n\n    if (value === '') {\n      isValid = false;\n      errorMessage = '';\n    }\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n\n      if (isValid === false && value === '') {\n        errorMessage = 'Fill in the field';\n      }\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n      if (isValid === false && value !== '') {\n        errorMessage = 'Invalid email';\n      }\n    }\n\n    if (validation.unique) {\n      prop.users.forEach((element) => {\n        isValid = element.userEmail !== value && isValid;\n\n        if (isValid === false && value !== '') {\n          errorMessage = 'Email already exists';\n        }\n      });\n    }\n    return { isValid, errorMessage };\n  };\n\n  const handleChange = (event, controlName) => {\n    const inputValue = event.target.value;\n    const regInputsFormCtrls = { ...prop.regInputsFormCtrls };\n    const control = { ...prop.regInputsFormCtrls[controlName] };\n\n    control.value = inputValue;\n    control.touched = true;\n    control.valid = validateControl(control.value, control.validation);\n\n    regInputsFormCtrls[controlName] = control;\n\n    let isFormValid = true;\n\n    Object.keys(regInputsFormCtrls).forEach((name) => {\n      isFormValid = regInputsFormCtrls[name].valid.isValid && isFormValid;\n    });\n\n    prop.regFormControl(regInputsFormCtrls);\n    prop.changeRegFormValid(isFormValid);\n  };\n\n  return (\n    <RegForm\n      onSubmit={handleSubmit}\n      regInputsFormCtrls={prop.regInputsFormCtrls}\n      onChange={handleChange}\n      isRegFormValid={prop.isRegFormValid}\n    />\n  );\n};\n\nfunction mapStateToProps(store) {\n  return {\n    users: store.users,\n    regInputsFormCtrls: store.formControls.regFormControls,\n    initRegFormControls: store.initFormControls.regFormControls,\n    isRegFormValid: store.isRegFormValid,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addingUser(user) {\n    dispatch(addUser(user));\n  },\n\n  regFormControl(obj) {\n    dispatch(regFormControl(obj));\n  },\n\n  changeRegFormValid(bool) {\n    dispatch(isRegFormValid(bool));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reg);\n","import React from 'react';\nimport Input from '../Input/Input';\n\nconst AuthForm = (props) => {\n  const prop = props;\n\n  return (\n    <form onSubmit={prop.onSubmit}>\n      <Input\n        type={prop.authMailFormCtrl.type}\n        label={prop.authMailFormCtrl.label}\n        onChange={prop.onChange}\n        name={prop.authMailFormCtrl.name}\n        value={prop.authMailFormCtrl.value}\n        shouldValidate={!!prop.authMailFormCtrl.validation}\n        valid={prop.authMailFormCtrl.valid.isValid}\n        touched={prop.authMailFormCtrl.touched}\n        errorMessage={prop.authMailFormCtrl.valid.errorMessage}\n      />\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={!prop.authMailFormCtrl.valid.isValid}>\n        Sign in\n      </button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport AuthForm from '../../components/AuthForm/AuthForm';\nimport { authMailVal, authUser, authFormControl } from '../../actions/actions';\n\nconst Auth = (props) => {\n  const prop = props;\n\n  const history = useHistory();\n\n  console.log(prop.store);\n\n\n  function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n\n  const validateControl = (value, validation) => {\n    let isValid = true;\n    let errorMessage = '';\n\n    if (!validation) {\n      return true;\n    }\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n      if (isValid === false && value !== '') {\n        errorMessage = 'Fill in the field';\n      }\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n      if (isValid === false && value !== '') {\n        errorMessage = 'Email does not exist';\n      }\n    }\n\n    if (validation.exist) {\n      prop.users.forEach((element) => {\n        isValid = element.userEmail === value && isValid;\n\n        if (isValid === false && value !== '') {\n          errorMessage = 'Email is not registered';\n        }\n      });\n    }\n\n    return { isValid, errorMessage };\n  };\n\n\n  const handleChange = (event) => {\n    const inputValue = event.target.value;\n    prop.authMailToStore(inputValue);\n\n    const control = { ...prop.authMailFormCtrl };\n\n    control.value = inputValue;\n    control.touched = true;\n    control.valid = validateControl(control.value, control.validation);\n\n    prop.authFormControl(control);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const usersArr = prop.users;\n    const { authMail } = prop;\n\n    usersArr.forEach((el) => {\n      if (el.userEmail === authMail) {\n        const storeJSON = JSON.stringify(el);\n        localStorage.setItem('authUserData', storeJSON);\n\n        prop.userAuth(true);\n\n        history.push('/homepage');\n      }\n    });\n  };\n\n  return (\n    <AuthForm\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n      authMailFormCtrl={prop.authMailFormCtrl}\n    />\n  );\n};\n\nconst mapStateToProps = (store) => ({\n  users: store.users,\n  store,\n  authMail: store.authMail,\n  authMailFormCtrl: store.formControls.authFormControls.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  authMailToStore(mail) {\n    dispatch(authMailVal(mail));\n  },\n\n  userAuth(bool) {\n    dispatch(authUser(bool));\n    const userAuthFlagJSON = JSON.stringify(bool);\n    localStorage.setItem('userAuthFlag', userAuthFlagJSON);\n  },\n\n  authFormControl(obj) {\n    dispatch(authFormControl(obj));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\n\nconst HomePage = () => {\n\n  const userData = JSON.parse(localStorage.getItem('authUserData'));\n\n  return (\n    <div>\n      <h1>Hello, {userData.userName}</h1>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst Profile = () => {\n  const userData = JSON.parse(localStorage.authUserData);\n\n  return (\n    <div>\n      <h1>Name: {userData.userName}</h1>\n      <h1>e-mail: {userData.userEmail}</h1>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Reg from '../Reg/Reg';\nimport Auth from '../Auth/Auth';\nimport HomePage from '../../components/HomePage/HomePage';\nimport Profile from '../../components/Profile/Profile';\nimport { authUser, authMailVal, authFormControl } from '../../actions/actions';\n\nimport './_App.scss';\n\nconst App = (props) => {\n  const prop = props;\n\n  const userAuthFlag = JSON.parse(localStorage.getItem('userAuthFlag'));\n\n  const handleClickSignOut = () => {\n    localStorage.removeItem('authUserData');\n    prop.userOut(false, prop.initAuthFormControls.email);\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        {userAuthFlag === null && (\n        <Link to=\"/registration\" className=\"btn btn-primary header__btn\">\n          Sign Up\n        </Link>\n        )}\n        {userAuthFlag === null && (\n        <Link to=\"/auth\" className=\"btn btn-primary header__btn\">\n          Sign in\n        </Link>\n        )}\n        {userAuthFlag === false && (\n        <Link to=\"/registration\" className=\"btn btn-primary header__btn\">\n          Sign Up\n        </Link>\n        )}\n        {userAuthFlag === false && (\n        <Link to=\"/auth\" className=\"btn btn-primary header__btn\">\n          Sign in\n        </Link>\n        )}\n        {userAuthFlag && (\n        <Link to=\"/profile\" className=\"btn btn-primary header__btn\">\n          Profile\n        </Link>\n        )}\n        {userAuthFlag && (\n        <Link to=\"/registration\" className=\"btn btn-primary header__btn\" onClick={handleClickSignOut}>\n          Sign out\n        </Link>\n        )}\n      </header>\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/registration\">\n            <Reg />\n          </Route>\n          <Route path=\"/auth\">\n            <Auth />\n          </Route>\n          <Route path=\"/homepage\">\n            <HomePage />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = (store) => ({\n  authUserFlag: store.userAuthFlag,\n  initAuthFormControls: store.initFormControls.authFormControls,\n});\n\nconst mapDispathToProps = (dispatch) => ({\n  userOut(bool, obj) {\n    dispatch(authUser(bool));\n    dispatch(authMailVal(''));\n    dispatch(authFormControl(obj));\n    const userAuthFlagJSON = JSON.stringify(bool);\n    localStorage.setItem('userAuthFlag', userAuthFlagJSON);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}